using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, String["libpng16"], :libpng),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/SimonDanisch/LibpngBuilder/releases/download/1.0.0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, :glibc) => ("$bin_prefix/libpng.v1.6.31.aarch64-linux-gnu.tar.gz", "14b20b05fffbf01f7f202238e8df53702a85ef75f70d80ceb7d61d763847dab3"),
    Linux(:aarch64, :musl) => ("$bin_prefix/libpng.v1.6.31.aarch64-linux-musl.tar.gz", "c9f069372398b2b414ca0d2cf9b1526ca894715e90d3245c5e82d1e6756d6713"),
    Linux(:armv7l, :glibc, :eabihf) => ("$bin_prefix/libpng.v1.6.31.arm-linux-gnueabihf.tar.gz", "83d28059cd9e47c801d2b9941b6d37da48cffeca54e086b4170a5796119dc9e1"),
    Linux(:armv7l, :musl, :eabihf) => ("$bin_prefix/libpng.v1.6.31.arm-linux-musleabihf.tar.gz", "45a0fa4d86b3c83f6f20ac5d6dc9e97f6f256644d256b0c0bb68ecb5f5218ade"),
    Linux(:i686, :glibc) => ("$bin_prefix/libpng.v1.6.31.i686-linux-gnu.tar.gz", "cba53445b94e639dbd7c280c498d2122e7ceef855e7930d6ca35f4e558825b3f"),
    Linux(:i686, :musl) => ("$bin_prefix/libpng.v1.6.31.i686-linux-musl.tar.gz", "26c74bd4e407e6d10ab12d1b87292da5b62b198cc14adec95344a70b7b7162fd"),
    Windows(:i686) => ("$bin_prefix/libpng.v1.6.31.i686-w64-mingw32.tar.gz", "206f72f000307ddc6c24a79143f65c738ca742198553cc30b4e66530f2856183"),
    Linux(:powerpc64le, :glibc) => ("$bin_prefix/libpng.v1.6.31.powerpc64le-linux-gnu.tar.gz", "eb988070b1c100e2d793553cb2d0332d2798843fda5f59e46e4d52346c8ae165"),
    MacOS(:x86_64) => ("$bin_prefix/libpng.v1.6.31.x86_64-apple-darwin14.tar.gz", "52ed2afbd94825f5e8ee2956e07475702aed3a8de81d3920f951fb11ad94fe1b"),
    Linux(:x86_64, :glibc) => ("$bin_prefix/libpng.v1.6.31.x86_64-linux-gnu.tar.gz", "3a2525cfbf6066f3e223de5d7e9762089a72e062c70097b0e117f1d91464fc53"),
    Linux(:x86_64, :musl) => ("$bin_prefix/libpng.v1.6.31.x86_64-linux-musl.tar.gz", "8e2a7a6c81fa283f601ee5b02312d813cb4b312b19d9476aa7731b18273d6cea"),
    FreeBSD(:x86_64) => ("$bin_prefix/libpng.v1.6.31.x86_64-unknown-freebsd11.1.tar.gz", "1e7a734d30b9bc31a476c9541266dc5fd2eb3b37999f3bae6e039a64c9377c52"),
    Windows(:x86_64) => ("$bin_prefix/libpng.v1.6.31.x86_64-w64-mingw32.tar.gz", "4fe693957404ad3b01e8f9974a6f10798de263b29ae52b23af475bcbf84bcb85"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
if haskey(download_info, platform_key())
    url, tarball_hash = download_info[platform_key()]
    if unsatisfied || !isinstalled(url, tarball_hash; prefix=prefix)
        # Download and install binaries
        install(url, tarball_hash; prefix=prefix, force=true, verbose=verbose)
    end
elseif unsatisfied
    # If we don't have a BinaryProvider-compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform $(triplet(platform_key())) is not supported by this package!")
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps_png.jl"), products)
